#Creating exponetially distributed stochastic nodes for the speciation and extinction rate.
speciation_rate ~ dnExponential(10)
extinction_rate ~ dnExponential(10)
psi ~ dnExponential(10) 

#Specifying proposal algorithms to sample the value of the stochastic nodes in proportion to its posterior probability.
moves.append( mvScale(speciation_rate, lambda=0.5, tune=true, weight=3.0) )
moves.append( mvScale(extinction_rate, lambda=0.5, tune=true, weight=3.0) )
moves.append( mvScale(psi, lambda=0.5, tune=true, weight=3) )

#You can track the values of diversification and turnover with the := function
diversification := speciation_rate - extinction_rate
turnover := extinction_rate/speciation_rate

#rho is the probability of extant species sampling. In this dataset, all of the bears are extinct, so the probability of this is 1.
rho <- 1.0

origin_time ~ dnUnif(37.2, 49.0)

moves.append( mvSlide(origin_time, delta=1.0, tune=true, weight=5.0) )

#Defining the prior distribution on the tree topology & divergence times
tree_dist = dnFBDRP(lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=rho, origin=origin_time, taxa=taxa)

#Making clade constaints based on prior knowledge
clade_ursinae = clade("Melursus_ursinus", "Ursus_arctos", "Ursus_maritimus", 
                  "Helarctos_malayanus", "Ursus_americanus", "Ursus_thibetanus", "Ursus_abstrusus") 
constraints = v(clade_ursinae)

#Specify the final constrained tree.
timetree ~ dnConstrainedTopology(tree_dist, constraints=constraints)

#Add moves for the tree toplogy
moves.append( mvNarrow(timetree, weight=n_taxa) )
moves.append( mvFNPR(timetree, weight=n_taxa/4) )
moves.append( mvCollapseExpandFossilBranch(timetree, origin_time, weight=6.0) )
moves.append( mvNodeTimeSlideUniform(timetree, weight=n_taxa) )
moves.append( mvRootTimeSlideUniform(timetree, origin_time, weight=5.0) )
moves.append( mvSubtreeScale(timetree, weight=n_taxa/5.0) )

#Monitoring node ages of interest.
age_ursinae := tmrca(timetree, clade_ursinae)
clade_extant = clade("Ailuropoda_melanoleuca","Tremarctos_ornatus","Melursus_ursinus",
                    "Ursus_arctos","Ursus_maritimus","Helarctos_malayanus",
                    "Ursus_americanus","Ursus_thibetanus")
extant_mrca := tmrca(timetree, clade_extant)

num_samp_anc := timetree.numSampledAncestors()

extinct_sp = v("Agriarctos_spp", "Ailurarctos_lufengensis", "Ballusia_elmensis",
				"Indarctos_arctoides", "Indarctos_punjabiensis", "Indarctos_vireti",
				"Kretzoiarctos_beatrix", "Parictis_montanus", "Ursavus_brevirhinus",
				"Ursavus_primaevus", "Ursus_abstrusus", "Zaragocyon_daamsi")

pruned_tree := fnPruneTree(timetree, prune=extinct_sp)


